/*!
 * Consistent.js Expressions 0.8.1
 * @author Karl von Randow
 * @license Apache License, Version 2.0
 */
!function(e,t){if(typeof Consistent==="undefined"){throw"Consistent must be included before consistent-expressions.js"}Consistent.expressionToFunction=function(e){var t=f(e);var n=l(t,e);try{return new Function("snapshot","ctx","return "+n+";")}catch(r){throw"Error compiling expression: "+e+" => "+n+" ("+r+")"}};Consistent.statementToFunction=function(e){var t=f(e);var n=c(t,e);try{return new Function("scope",n+";")}catch(r){throw"Error compiling statements: "+e+" => "+n+" ("+r+")"}};var n=0;var r=1;var i=2;var s=3;var u=4;var o=5;function f(e){var t=[];var f=0;var l=e.length;var c=n;var a="";while(f<l){var g=e.charAt(f);if(c===n){if(p(g)){c=r}else if(v(g)){c=s}else if(y(g)){c=i}else if(A(g)){c=u}else if(m(g)){c=o}else if(x(g)){throw"Illegal escape character at "+f+": "+e}else if(F(g)){f++;continue}else{throw"Invalid character '"+g+"' at "+f+": "+e}}else if(c===r){if(!h(g)){w();continue}}else if(c===i){if(!y(g)){w();continue}}else if(c===s){if(v(g)){a+=g;f++;w();continue}else if(x(g)){a+=g;f++;g=e.charAt(f)}}else if(c===u){if(!C(g)){w();continue}}else if(c===o){w();continue}a+=g;f++}function w(){if(a.length>0){if(c===r&&j(a)){var e=E(a);if(e!==null){t.push({type:i,text:e})}else{t.push({type:u,text:a})}}else{t.push({type:c,text:a})}}a="";c=n}w();return t}function l(e,t){var n=[];var f,l=e.length;for(f=0;f<l;f++){var c=e[f];if(c.type===r){n.push('ctx.getNestedProperty(snapshot, "'+a(c.text)+'")')}else if(c.type===i){if(w(c.text)){throw"Assignment is invalid in expression: "+t}else{n.push(c.text)}}else if(c.type===s||c.type===u){n.push(c.text)}else if(c.type===o){throw"Expressions may not contain multiple statements in expression: "+t}}return n.join(" ")}function c(e,t){var n=[];var f="";var l,c=e.length;for(l=0;l<c;l++){var p=e[l];if(p.type===r){var h=l+1<c?e[l+1]:null;if(h!==null&&h.type===i&&w(h.text)){n.push('scope.$.set("'+a(p.text)+'", ');f=")";var v=d(h.text);if(v){n.push('scope.$.get("'+a(p.text)+'")');n.push(v)}l++}else{n.push('scope.$.get("'+a(p.text)+'")')}}else if(p.type===i){n.push(p.text)}else if(p.type===s||p.type===u){n.push(p.text)}else if(p.type===o){if(f){n.push(f);f=""}n.push(";")}}return n.join(" ")+f}function a(e){return e.replace(/"/g,'\\"')}function p(e){return e>="a"&&e<="z"||e>="A"&&e<="Z"||e==="_"}function h(e){return p(e)||e==="."||e>="0"&&e<="9"}function v(e){return e==="'"||e==='"'}function x(e){return e==="\\"}function y(e){return e==="!"||e==="%"||e==="="||e==="<"||e===">"||e==="*"||e==="/"||e==="+"||e==="-"||e==="("||e===")"||e==="^"||e==="&"||e==="?"||e===":"}function g(e){return e==="="||e==="+="||e==="-="||e==="*="||e==="/="}function w(e){return g(e)||e==="++"||e==="--"}function d(e){if(e==="="){return null}else if(e.length==2&&e.indexOf("=")===1){return e.charAt(0)}else if(e==="++"){return"+1"}else if(e==="--"){return"-1"}else{throw"Unsupported mutation operator: "+e}}function m(e){return e===";"}function A(e){return e>="0"&&e<="9"}function C(e){return A(e)||e=="."}function F(e){return e<=" "}function j(e){return e==="true"||e==="false"||e==="and"||e==="or"||e==="lt"||e==="le"||e==="gt"||e==="ge"||e==="eq"}function E(e){if(e==="and"){return"&&"}else if(e==="or"){return"||"}else if(e==="lt"){return"<"}else if(e==="le"){return"<="}else if(e==="gt"){return">"}else if(e==="ge"){return">="}else if(e==="eq"){return"=="}else{return null}}}(window);